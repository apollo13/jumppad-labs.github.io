(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1191],{5170:function(s,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/resources/helm",function(){return o(9965)}])},9965:function(s,n,o){"use strict";o.r(n),o.d(n,{__N_SSG:function(){return l}});var e=o(5893),r=o(1151),a=o(8691);function t(s){let n=Object.assign({h1:"h1",code:"code",p:"p",a:"a",h2:"h2",pre:"pre",h3:"h3"},(0,r.ah)(),s.components),{Intro:o,Properties:t,Property:l}=n;return o||p("Intro",!0),t||p("Properties",!0),l||p("Property",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h1,{children:["Helm ",(0,e.jsx)(n.code,{children:"helm"})]}),"\n",(0,e.jsxs)(o,{children:[(0,e.jsxs)(n.p,{children:["The ",(0,e.jsx)(n.code,{children:"helm"})," resource allows Helm charts to be provisioned to ",(0,e.jsx)(n.code,{children:"k8s_cluster"})," resources."]}),(0,e.jsx)(n.p,{children:"Documentation is work in progress, please see the old documentation at:"}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:"https://shipyard.run/docs/resources/helm",children:"https://shipyard.run/docs/resources/helm"})})]}),"\n",(0,e.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,e.jsxs)(t,{children:[(0,e.jsxs)(l,{name:"cluster",type:"string",required:"true",value:"",readonly:!0,children:[(0,e.jsx)(n.p,{children:"Text"}),(0,e.jsx)(n.pre,{language:"hcl",code:"code\n",children:(0,e.jsx)(n.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-color-text)">code</span></span>\n<span></span>'})})]}),(0,e.jsx)(l,{name:"cluster",type:"string",required:"true",value:"",readonly:!0,children:(0,e.jsx)(n.p,{children:"Text"})})]}),"\n",(0,e.jsx)(a.default,{}),"\n",(0,e.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,e.jsx)(n.h3,{children:"Install Helm Chart from a Helm Repository"}),"\n",(0,e.jsx)(n.pre,{language:"hcl",code:'resource "helm" "consul" {\n  cluster = resource.k8s_cluster.k3s.id\n\n  repository {\n    name = "hashicorp"\n    url  = "https://helm.releases.hashicorp.com"\n  }\n\n  chart   = "hashicorp/consul"\n  version = "v0.40.0"\n\n  values = "./helm/consul-values.yaml"\n\n  health_check {\n    timeout = "240s"\n    pods = [\n      "component=connect-injector",\n      "component=client",\n      "component=controller",\n      "component=server",\n    ]\n  }\n}\n',children:(0,e.jsx)(n.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;helm&quot; &quot;consul&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  cluster </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> resource</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">k8s_cluster</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">k3s</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">id</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">repository</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    name </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;hashicorp&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">    url  </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;https://helm.releases.hashicorp.com&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  chart   </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;hashicorp/consul&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  version </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;v0.40.0&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  values </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;./helm/consul-values.yaml&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">health_check</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    timeout </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;240s&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">    pods </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> [</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-string-expression)">&quot;component=connect-injector&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-string-expression)">&quot;component=client&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-string-expression)">&quot;component=controller&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-string-expression)">&quot;component=server&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    ]</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(n.h3,{children:"Install Helm Chart from a GitHub Repository"}),"\n",(0,e.jsx)(n.pre,{language:"hcl",code:'resource "helm" "vault" {\n  cluster = resource.k8s_cluster.k3s.id\n  chart = "github.com/hashicorp/vault-helm"\n\n  values_string = {\n    "server.dataStorage.size" = "128Mb"\n  }\n}\n',children:(0,e.jsx)(n.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;helm&quot; &quot;vault&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  cluster </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> resource</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">k8s_cluster</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">k3s</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">id</span></span>\n<span><span style="color: var(--shiki-color-text)">  chart </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;github.com/hashicorp/vault-helm&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  values_string </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    &quot;server.dataStorage.size&quot; = &quot;128Mb&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'})}),"\n",(0,e.jsx)(n.h3,{children:"Install Helm Chart from a Local Folder"}),"\n",(0,e.jsx)(n.pre,{language:"hcl",code:'resource "helm" "vault" {\n  cluster = resource.k8s_cluster.k3s.id\n  chart   = "./files/helm/vault"\n\n  values_string = {\n    "server.dataStorage.size" = "128Mb"\n  }\n}\n',children:(0,e.jsx)(n.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;helm&quot; &quot;vault&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  cluster </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> resource</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">k8s_cluster</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">k3s</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">id</span></span>\n<span><span style="color: var(--shiki-color-text)">  chart   </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;./files/helm/vault&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  values_string </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    &quot;server.dataStorage.size&quot; = &quot;128Mb&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'})})]})}var l=!0;function p(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),s.components);return n?(0,e.jsx)(n,Object.assign({},s,{children:(0,e.jsx)(t,s)})):t(s)}},8691:function(s,n,o){"use strict";o.r(n),o.d(n,{__N_SSG:function(){return t}});var e=o(5893),r=o(1151);function a(s){let n=Object.assign({h2:"h2",p:"p",code:"code",a:"a"},(0,r.ah)(),s.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h2,{id:"meta_properties",children:"Meta Properties"}),"\n",(0,e.jsxs)(n.p,{children:["In addition to the main properties, all resources have meta properties, such\nas the ",(0,e.jsx)(n.code,{children:"id"})," of the resource. To see the list of these properties please see the\n",(0,e.jsx)(n.code,{children:"Meta Properties"})," section in the documentation ",(0,e.jsx)(n.a,{href:"/docs/resources/meta",children:"/docs/resources/meta"}),"."]})]})}var t=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),s.components);return n?(0,e.jsx)(n,Object.assign({},s,{children:(0,e.jsx)(a,s)})):a(s)}}},function(s){s.O(0,[9774,2888,179],function(){return s(s.s=5170)}),_N_E=s.O()}]);