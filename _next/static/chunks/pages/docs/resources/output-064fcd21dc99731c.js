(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9375],{3951:function(e,s,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/resources/output",function(){return n(9120)}])},9120:function(e,s,n){"use strict";n.r(s),n.d(s,{__N_SSG:function(){return i}});var o=n(5893),r=n(1151),t=n(8691);function a(e){let s=Object.assign({h1:"h1",code:"code",p:"p",h2:"h2",pre:"pre"},(0,r.ah)(),e.components),{Intro:n,Properties:a,Property:i}=s;return n||l("Intro",!0),a||l("Properties",!0),i||l("Property",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s.h1,{children:["Output ",(0,o.jsx)(s.code,{children:"output"})]}),"\n",(0,o.jsxs)(n,{children:[(0,o.jsxs)(s.p,{children:["The ",(0,o.jsx)(s.code,{children:"output"})," resource allows you to define output variables which can be used\nwith the jumppad ",(0,o.jsx)(s.code,{children:"output"})," and ",(0,o.jsx)(s.code,{children:"env"})," commands."]}),(0,o.jsxs)(s.p,{children:[(0,o.jsx)("b",{children:"Note:"})," ",(0,o.jsx)(s.code,{children:"output"})," resources are module scoped, ",(0,o.jsx)(s.code,{children:"jumppad output"})," will only show\nthe value of ",(0,o.jsx)(s.code,{children:"output"})," resources scoped at the top level."]})]}),"\n",(0,o.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsx)(a,{children:(0,o.jsx)(i,{name:"value",type:"string",required:"true",value:"",children:(0,o.jsx)(s.p,{children:"Value to set to the output, if this value contains an interpolated\nproperty from another resource, the output will be created after the\nreferenced resource."})})}),"\n",(0,o.jsx)(t.default,{}),"\n",(0,o.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsxs)(s.p,{children:["The following example shows how to use an ",(0,o.jsx)(s.code,{children:"output"})," resource to configure the\nenvironment variable ",(0,o.jsx)(s.code,{children:"KUBECONFIG"}),"."]}),"\n",(0,o.jsx)(s.pre,{language:"hcl",code:'output "KUBECONFIG" {\n  value = resource.k8s_cluster.k3s.kubeconfig\n}\n',children:(0,o.jsx)(s.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-token-keyword)">output</span><span style="color: var(--shiki-token-string-expression)"> &quot;KUBECONFIG&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> resource</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">k8s_cluster</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">k3s</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">kubeconfig</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'})})]})}var i=!0;function l(e,s){throw Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}s.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,r.ah)(),e.components);return s?(0,o.jsx)(s,Object.assign({},e,{children:(0,o.jsx)(a,e)})):a(e)}},8691:function(e,s,n){"use strict";n.r(s),n.d(s,{__N_SSG:function(){return a}});var o=n(5893),r=n(1151);function t(e){let s=Object.assign({h2:"h2",p:"p",code:"code",pre:"pre",em:"em"},(0,r.ah)(),e.components),{Properties:n,Property:t}=s;return n||i("Properties",!0),t||i("Property",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h2,{id:"meta_properties",children:"Meta Properties"}),"\n",(0,o.jsx)(s.p,{children:"All jumppad resources have the following read only properties."}),"\n",(0,o.jsxs)(n,{children:[(0,o.jsxs)(t,{name:"depends_on",type:"[]string",required:"false",value:"",children:[(0,o.jsxs)(s.p,{children:["An array of resources that this resource depends on. Jumppad will ensure that\nall resources referenced in ",(0,o.jsx)(s.code,{children:"depends_on"})," are created before the resource."]}),(0,o.jsx)(s.p,{children:'For example, the resource "mine" would be created after the resource "myother".'}),(0,o.jsx)(s.pre,{language:"hcl",code:'  resource "container" "mine" {\n    depends_on = ["resource.container.myother"]\n  }\n  \n  resource "container" "myother" {\n\n  }\n',children:(0,o.jsx)(s.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;container&quot; &quot;mine&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    depends_on </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;resource.container.myother&quot;</span><span style="color: var(--shiki-color-text)">]</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;container&quot; &quot;myother&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span></span>'})}),(0,o.jsxs)(s.p,{children:["Where possible Jumppad attempts to automatically create a dependency graph\nby using interpolated properties. For example, the previous scenario could\nhave been written without using ",(0,o.jsx)(s.code,{children:"depends_on"})," by using interpolated properties."]}),(0,o.jsx)(s.pre,{language:"hcl",code:'  resource "container" "mine" {\n    image {\n      name = resource.container.myother.image.name\n    }\n  }\n  \n  resource "container" "myother" {\n    image {\n      name = "myimage:version"\n    }\n  }\n',children:(0,o.jsx)(s.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;container&quot; &quot;mine&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">image</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">      name </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> resource</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">container</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">myother</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">image</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">name</span></span>\n<span><span style="color: var(--shiki-color-text)">    }</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;container&quot; &quot;myother&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">image</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">      name </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;myimage:version&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">    }</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span></span>'})})]}),(0,o.jsx)(t,{name:"disabled",type:"bool",required:"false",value:"false",children:(0,o.jsx)(s.p,{children:"If set to false the resource will not be created."})}),(0,o.jsxs)(t,{name:"id",type:"string",required:"false",value:"",readonly:!0,children:[(0,o.jsxs)(s.p,{children:["The unique ",(0,o.jsx)(s.code,{children:"id"})," for the resource, this value can be used in interpolation\nsyntax to reference properties for a resource."]}),(0,o.jsx)(s.pre,{code:"  resource.container.nic\n  ouput.myoutput\n  module.mine.submodule.resource.container.nic\n  module.mine.submodule.ouput.myoutput\n\n",children:(0,o.jsx)(s.code,{children:"  resource.container.nic\n  ouput.myoutput\n  module.mine.submodule.resource.container.nic\n  module.mine.submodule.ouput.myoutput\n\n"})})]}),(0,o.jsxs)(t,{name:"name",type:"string",required:"false",value:"",readonly:!0,children:[(0,o.jsxs)(s.p,{children:["The name of the resource, ",(0,o.jsx)(s.em,{children:"note:"})," this value is not unique and does not\ntake into account if the resource is embedded in a module."]}),(0,o.jsxs)(s.p,{children:["This value is the same as the ",(0,o.jsx)(s.code,{children:"name"}),' field of the resource. i.e "mine".']}),(0,o.jsx)(s.pre,{language:"hcl",code:'  resource "container" "mine" {}\n',children:(0,o.jsx)(s.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;container&quot; &quot;mine&quot;</span><span style="color: var(--shiki-color-text)"> {}</span></span>\n<span></span>'})})]}),(0,o.jsxs)(t,{name:"type",type:"string",required:"true",value:"",readonly:!0,children:[(0,o.jsx)(s.p,{children:"The string type of the resource."}),(0,o.jsxs)(s.p,{children:["This value is the same as the ",(0,o.jsx)(s.code,{children:"type"}),' field of the resource. i.e. "container"']}),(0,o.jsx)(s.pre,{language:"hcl",code:'  resource "container" "mine" {}\n',children:(0,o.jsx)(s.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;container&quot; &quot;mine&quot;</span><span style="color: var(--shiki-color-text)"> {}</span></span>\n<span></span>'})})]}),(0,o.jsxs)(t,{name:"module",type:"string",required:"false",value:"",readonly:!0,children:[(0,o.jsx)(s.p,{children:"The full module path for the resource. Should the resource be included\nin a module, this value will be the name of the module and any parent\nmodules that the resource is embedded in."}),(0,o.jsxs)(s.p,{children:["For example, given the following structure, the ",(0,o.jsx)(s.code,{children:"module"}),' value would be\n"mymodule.mysubmodule".']}),(0,o.jsx)(s.pre,{language:"hcl",code:'  resource "container" "mine" {}\n\n  ## included in\n\n  module "mysubmodule" {}\n  \n  ## included in\n\n  module "mymodule" {}\n',children:(0,o.jsx)(s.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;container&quot; &quot;mine&quot;</span><span style="color: var(--shiki-color-text)"> {}</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">## included in</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">module</span><span style="color: var(--shiki-token-string-expression)"> &quot;mysubmodule&quot;</span><span style="color: var(--shiki-color-text)"> {}</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">## included in</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">module</span><span style="color: var(--shiki-token-string-expression)"> &quot;mymodule&quot;</span><span style="color: var(--shiki-color-text)"> {}</span></span>\n<span></span>'})})]}),(0,o.jsx)(t,{name:"file",type:"string",required:"false",value:"",readonly:!0,children:(0,o.jsx)(s.p,{children:"The absolute path of the file that contains this resource"})})]})]})}var a=!0;function i(e,s){throw Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}s.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,r.ah)(),e.components);return s?(0,o.jsx)(s,Object.assign({},e,{children:(0,o.jsx)(t,e)})):t(e)}}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=3951)}),_N_E=e.O()}]);