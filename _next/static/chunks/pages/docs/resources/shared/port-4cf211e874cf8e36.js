(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[230],{4833:function(e,r,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/resources/shared/port",function(){return n(6600)}])},6600:function(e,r,n){"use strict";n.r(r),n.d(r,{__N_SSG:function(){return i}});var t=n(5893),o=n(1151);function s(e){let r=Object.assign({hr:"hr",h2:"h2",p:"p"},(0,o.ah)(),e.components),{Properties:n,Property:s}=r;return n||c("Properties",!0),s||c("Property",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"port",children:"port"}),"\n",(0,t.jsx)(r.p,{children:"A port stanza defines host to container communications"}),"\n",(0,t.jsxs)(n,{children:[(0,t.jsx)(s,{name:"local",type:"string",required:"true",value:"",children:(0,t.jsx)(r.p,{children:"The local port in the container."})}),(0,t.jsx)(s,{name:"host",type:"string",required:"true",value:"",children:(0,t.jsx)(r.p,{children:"The host port to map the local port to."})}),(0,t.jsx)(s,{name:"protocol",type:"string",required:"false",value:"",children:(0,t.jsx)(r.p,{children:'The protocol to use when exposing the port, can be "tcp", or "udp".'})}),(0,t.jsx)(s,{name:"open_in_browser",type:"string",required:"false",value:"/",children:(0,t.jsx)(r.p,{children:"Should a browser window be automatically opened when this resource is created. Browser windows will open at the path specified by this property."})})]})]})}var i=!0;function c(e,r){throw Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}r.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,o.ah)(),e.components);return r?(0,t.jsx)(r,Object.assign({},e,{children:(0,t.jsx)(s,e)})):s(e)}}},function(e){e.O(0,[774,888,179],function(){return e(e.s=4833)}),_N_E=e.O()}]);