(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[841],{4921:function(e,s,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/resources/certificate",function(){return r(3074)}])},3074:function(e,s,r){"use strict";r.r(s),r.d(s,{__N_SSG:function(){return i}});var n=r(5893),t=r(1151),a=r(8691);function o(e){let s=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre"},(0,t.ah)(),e.components),{Intro:r,Properties:o,Property:i}=s;return r||c("Intro",!0),o||c("Properties",!0),i||c("Property",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{children:"Certificate"}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsxs)(s.p,{children:["The Certificate resource is split into two sub resources ",(0,n.jsx)(s.code,{children:"certificate_ca"})," that\nallows you to create x509 Root Certificates and the associated Private Key."]}),(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"certificate_leaf"})," that allows the creation of self-signed x509 Leaf Certificates\nand associated Private Keys."]})]}),"\n",(0,n.jsxs)(s.h1,{children:["Root Certificates ",(0,n.jsx)(s.code,{children:"certificate_ca"})]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)(s.p,{children:"The following parameters are available for creating certificate_ca resources,\nwhen a new resource is created Shipyard will create the certificate and associated\nprivate key and write them to the output folder. Certificates do not perisist\nthe lifecycle of a blueprint, when a blueprint is destroyed the created certs\nand keys are removed from the output folder."}),(0,n.jsx)(s.p,{children:"Root Certificates have a pre-set Common Name corresponding to the name of the resource"})]}),"\n",(0,n.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(o,{children:[(0,n.jsx)(i,{name:"output",type:"string",required:"true",value:"",children:(0,n.jsx)(s.p,{children:"Output folder to write the certifcate and private key to."})}),(0,n.jsx)(i,{name:"private_key",type:"#file",value:"",readonly:!0,children:(0,n.jsxs)(s.p,{children:["Details related to the private key generated by the ",(0,n.jsx)(s.code,{children:"certificate_ca"})," resource."]})}),(0,n.jsx)(i,{name:"public_key_pem",type:"#file",value:"",readonly:!0,children:(0,n.jsxs)(s.p,{children:["Details related to the PEM encoded public key generated by the ",(0,n.jsx)(s.code,{children:"certificate_ca"})," resource."]})}),(0,n.jsx)(i,{name:"public_key_ssh",type:"#file",value:"",readonly:!0,children:(0,n.jsxs)(s.p,{children:["Details related to the SSH encoded public key generated by the ",(0,n.jsx)(s.code,{children:"certificate_ca"})," resource."]})}),(0,n.jsx)(i,{name:"certificate",type:"#file",value:"",readonly:!0,children:(0,n.jsxs)(s.p,{children:["Details related to the certificate generated by the ",(0,n.jsx)(s.code,{children:"certificate_ca"})," resource."]})})]}),"\n",(0,n.jsx)(a.default,{}),"\n",(0,n.jsxs)(s.h1,{children:["Leaf Certificates ",(0,n.jsx)(s.code,{children:"certificate_ca"})]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)(s.p,{children:"The following parameters are available for creating certificate_leaf resources,\nwhen a new resource is created Shipyard will create the certificate and associated\nprivate key and write them to the output folder. Certificates do not perisist the\nlifecycle of a blueprint, when a blueprint is destroyed the created certs and\nkeys are removed from the output folder."}),(0,n.jsx)(s.p,{children:"To create a leaf certificate jumppad needs a valid CA certificate and private\nkey, these can be generated using the certificate_ca resource or can be an\nexisting x509 certificate and associated RSA private key."}),(0,n.jsx)(s.p,{children:"Leaf Certificates have a pre-set Common Name corresponding to the name of the resource"})]}),"\n",(0,n.jsx)(s.h2,{id:"properties-2",children:"Properties"}),"\n",(0,n.jsxs)(o,{children:[(0,n.jsx)(i,{name:"output",type:"string",required:"true",value:"",children:(0,n.jsx)(s.p,{children:"Output folder to write the certifcate and private key to."})}),(0,n.jsx)(i,{name:"ca_key",type:"string",required:"true",value:"",children:(0,n.jsx)(s.p,{children:"Path to the key used to generate the certificate authority"})}),(0,n.jsx)(i,{name:"ca_cert",type:"string",required:"true",value:"",children:(0,n.jsx)(s.p,{children:"Path to the root certificate"})}),(0,n.jsxs)(i,{name:"ip_addresses",type:"[]string",required:"false",value:"",children:[(0,n.jsx)(s.p,{children:"List of IP addresses to add to the certiicate"}),(0,n.jsx)(s.pre,{language:"hcl",code:'  ip_addresses = ["127.0.0.1"]\n',children:(0,n.jsx)(s.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-color-text)">  ip_addresses </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;127.0.0.1&quot;</span><span style="color: var(--shiki-color-text)">]</span></span>\n<span></span>'})})]}),(0,n.jsxs)(i,{name:"dns_names",type:"[]string",required:"false",value:"",children:[(0,n.jsx)(s.p,{children:"List of DNS names to add to the certiicate"}),(0,n.jsx)(s.pre,{language:"hcl",code:'  dns_names = [\n    "localhost",\n    "server.${variable.cd_consul_dc}.consul",\n    "1.consul.server.container.shipyard.run",\n    "2.consul.server.container.shipyard.run",\n    "3.consul.server.container.shipyard.run"\n  ]\n',children:(0,n.jsx)(s.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-color-text)">  dns_names </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> [</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;localhost&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;server.</span><span style="color: var(--shiki-token-keyword)">${variable</span><span style="color: var(--shiki-token-function)">.cd_consul_dc</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">.consul&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;1.consul.server.container.shipyard.run&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;2.consul.server.container.shipyard.run&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;3.consul.server.container.shipyard.run&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  ]</span></span>\n<span></span>'})})]}),(0,n.jsx)(i,{name:"private_key",type:"#file",value:"",readonly:!0,children:(0,n.jsxs)(s.p,{children:["Details related to the private key generated by the ",(0,n.jsx)(s.code,{children:"certificate_leaf"})," resource."]})}),(0,n.jsx)(i,{name:"public_key_pem",type:"#file",value:"",readonly:!0,children:(0,n.jsxs)(s.p,{children:["Details related to the PEM encoded public key generated by the ",(0,n.jsx)(s.code,{children:"certificate_leaf"})," resource."]})}),(0,n.jsx)(i,{name:"public_key_ssh",type:"#file",value:"",readonly:!0,children:(0,n.jsxs)(s.p,{children:["Details related to the SSH encoded public key generated by the ",(0,n.jsx)(s.code,{children:"certificate_leaf"})," resource."]})}),(0,n.jsx)(i,{name:"certificate",type:"#file",value:"",readonly:!0,children:(0,n.jsxs)(s.p,{children:["Details related to the certificate generated by the ",(0,n.jsx)(s.code,{children:"certificate_leaf"})," resource."]})})]}),"\n",(0,n.jsx)(a.default,{}),"\n",(0,n.jsx)(s.h2,{id:"file",children:"File"}),"\n",(0,n.jsxs)(o,{children:[(0,n.jsx)(i,{name:"filename",type:"string",required:"false",value:"",readonly:!0,children:(0,n.jsx)(s.p,{children:"Filename for the file"})}),(0,n.jsx)(i,{name:"directory",type:"string",required:"false",value:"",readonly:!0,children:(0,n.jsx)(s.p,{children:"Directory for the file"})}),(0,n.jsx)(i,{name:"path",type:"string",required:"false",value:"",readonly:!0,children:(0,n.jsx)(s.p,{children:"Full path for the file"})}),(0,n.jsx)(i,{name:"contents",type:"string",required:"false",value:"",readonly:!0,children:(0,n.jsx)(s.p,{children:"Contents of the file"})})]}),"\n",(0,n.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(s.pre,{language:"hcl",code:'resource "certificate_ca" "cd_consul_ca" {\n  output = data("certs")\n}\n\nresource "certificate_leaf" "cd_consul_server" {\n  ca_key = resource.certificate_ca.cd_consul_ca.key_path\n  ca_cert = resource.certificate_ca.cd_consul_ca.cert_path\n\n  ip_addresses = ["127.0.0.1"]\n\n  dns_names = [\n    "localhost",\n    "server.${var.cd_consul_dc}.consul",\n    "1.consul.server.container.shipyard.run",\n    "2.consul.server.container.shipyard.run",\n    "3.consul.server.container.shipyard.run"\n  ]\n\n  output = data("certs")\n}\n',children:(0,n.jsx)(s.code,{className:"language-hcl",children:'<span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;certificate_ca&quot; &quot;cd_consul_ca&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  output </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> data(</span><span style="color: var(--shiki-token-string-expression)">&quot;certs&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">resource</span><span style="color: var(--shiki-token-string-expression)"> &quot;certificate_leaf&quot; &quot;cd_consul_server&quot;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  ca_key </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> resource</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">certificate_ca</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">cd_consul_ca</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">key_path</span></span>\n<span><span style="color: var(--shiki-color-text)">  ca_cert </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> resource</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">certificate_ca</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">cd_consul_ca</span><span style="color: var(--shiki-token-constant)">.</span><span style="color: var(--shiki-color-text)">cert_path</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  ip_addresses </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;127.0.0.1&quot;</span><span style="color: var(--shiki-color-text)">]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  dns_names </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> [</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;localhost&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;server.</span><span style="color: var(--shiki-token-keyword)">${var</span><span style="color: var(--shiki-token-function)">.cd_consul_dc</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">.consul&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;1.consul.server.container.shipyard.run&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;2.consul.server.container.shipyard.run&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-string-expression)">&quot;3.consul.server.container.shipyard.run&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  ]</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  output </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> data(</span><span style="color: var(--shiki-token-string-expression)">&quot;certs&quot;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'})})]})}var i=!0;function c(e,s){throw Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}s.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,t.ah)(),e.components);return s?(0,n.jsx)(s,Object.assign({},e,{children:(0,n.jsx)(o,e)})):o(e)}},8691:function(e,s,r){"use strict";r.r(s),r.d(s,{__N_SSG:function(){return o}});var n=r(5893),t=r(1151);function a(e){let s=Object.assign({h2:"h2",p:"p",code:"code",a:"a"},(0,t.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"meta_properties",children:"Meta Properties"}),"\n",(0,n.jsxs)(s.p,{children:["In addition to the main properties, all resources have meta properties, such\nas the ",(0,n.jsx)(s.code,{children:"id"})," of the resource. To see the list of these properties please see the\n",(0,n.jsx)(s.code,{children:"Meta Properties"})," section in the documentation ",(0,n.jsx)(s.a,{href:"/docs/resources/meta",children:"/docs/resources/meta"}),"."]})]})}var o=!0;s.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,t.ah)(),e.components);return s?(0,n.jsx)(s,Object.assign({},e,{children:(0,n.jsx)(a,e)})):a(e)}}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=4921)}),_N_E=e.O()}]);