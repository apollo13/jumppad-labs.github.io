(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[113],{5355:function(n,e,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/introduction/running",function(){return s(7426)}])},7426:function(n,e,s){"use strict";s.r(e),s.d(e,{__N_SSG:function(){return r}});var o=s(5893),t=s(1151);function a(n){let e=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code"},(0,t.ah)(),n.components),{Intro:s,Button:a}=e;return a||l("Button",!0),s||l("Intro",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{children:"Running"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)(e.p,{children:"Blueprints are packages of Jumppad configuration which allow you to run cloud native applications on your computer. They can\nbe run by downloading them to your machine or by running them direct from Git repos."}),(0,o.jsx)(e.p,{children:"To take a look at some example blueprints, check out the examples repository."})]}),"\n",(0,o.jsx)(a,{href:"https://github.com/jumppad-labs/examples",arrow:"right",children:"Examples"}),"\n",(0,o.jsx)(e.h2,{id:"running-blueprints-from-the-local-filesystem",children:"Running blueprints from the local filesystem"}),"\n",(0,o.jsx)(e.p,{children:"To run a blueprint from your local machine first clone the example blueprints repo:"}),"\n",(0,o.jsx)(e.pre,{language:"shell",code:"git clone https://github.com/jumppad-labs/examples.git\ncd examples\n",children:(0,o.jsx)(e.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">git clone https://github.com/jumppad-labs/examples.git</span></span>\n<span><span style="color: var(--shiki-token-function)">cd</span><span style="color: var(--shiki-color-text)"> examples</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(e.p,{children:["You can then run a blueprint and create the resources using the ",(0,o.jsx)(e.code,{children:"jumppad up"})," command with the path of\nthe blueprint you would like to run. The following example runs a blueprint which runs HashiCorp Vault on\nKubernetes. When you run the following command Jumppad pulls and starts any necessary Docker containers,\nthen opens the browser windows defined by the blueprint."]}),"\n",(0,o.jsx)(e.pre,{language:"shell",code:"jumppad up ./kubernetes-vault\nRunning configuration from:  ./kubernetes-vault\n\n2020-04-04T17:15:28.988+0100 [DEBUG] Statefile does not exist\n2020-04-04T17:15:28.989+0100 [INFO]  Creating Network: ref=cloud\n2020-04-04T17:15:44.012+0100 [INFO]  Creating Container: ref=tools\n2020-04-04T17:15:44.012+0100 [INFO]  Creating Cluster: ref=k3s\n2020-04-04T17:15:44.012+0100 [INFO]  Creating Documentation: ref=docs\n",children:(0,o.jsx)(e.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">jumppad up ./kubernetes-vault</span></span>\n<span><span style="color: var(--shiki-color-text)">Running configuration from:  ./kubernetes-vault</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:15:28.988+0100 [DEBUG] Statefile does not exist</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:15:28.989+0100 [INFO]  Creating Network: ref=cloud</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:15:44.012+0100 [INFO]  Creating Container: ref=tools</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:15:44.012+0100 [INFO]  Creating Cluster: ref=k3s</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:15:44.012+0100 [INFO]  Creating Documentation: ref=docs</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(e.h2,{id:"running-blueprints-from-git-repositories",children:"Running blueprints from Git repositories"}),"\n",(0,o.jsxs)(e.p,{children:["Blueprints can also be run directly from the Git repositories, the following command will download the blueprint\nfrom github and then start any resources defined inside it. Blueprints are downloaded to your ",(0,o.jsx)(e.code,{children:"$HOME/.jumppad/blueprints"})," folder\nwith the the full repository path."]}),"\n",(0,o.jsx)(e.pre,{language:"shell",code:"jumppad up github.com/jumppad-labs/examples//kubernetes-vault\n",children:(0,o.jsx)(e.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">jumppad up github.com/jumppad-labs/examples//kubernetes-vault</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(e.h2,{id:"stopping-a-blueprint",children:"Stopping a blueprint"}),"\n",(0,o.jsxs)(e.p,{children:["To stop a blueprint use the ",(0,o.jsx)(e.code,{children:"jumppad down"})," command"]}),"\n",(0,o.jsx)(e.pre,{language:"shell",code:"jumppad down\n2020-04-04T17:21:27.340+0100 [INFO]  Destroy Ingress: ref=vault-http\n2020-04-04T17:21:27.340+0100 [INFO]  Destroy Container: ref=tools\n2020-04-04T17:21:27.340+0100 [INFO]  Destroy Kubernetes configuration: ref=dashboard config=[/home/nicj/go/src/github.co\nm/jumppad-labs/examples/vault-k8s/k8s_config]\n2020-04-04T17:21:27.340+0100 [INFO]  Destroy Ingress: ref=k8s-dashboard\n2020-04-04T17:21:27.340+0100 [INFO]  Destroy Helm chart: ref=vault\n2020-04-04T17:21:27.340+0100 [INFO]  Destroy Documentation: ref=docs\n",children:(0,o.jsx)(e.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">jumppad down</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:21:27.340+0100 [INFO]  Destroy Ingress: ref=vault-http</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:21:27.340+0100 [INFO]  Destroy Container: ref=tools</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:21:27.340+0100 [INFO]  Destroy Kubernetes configuration: ref=dashboard config=[/home/nicj/go/src/github.co</span></span>\n<span><span style="color: var(--shiki-color-text)">m/jumppad-labs/examples/vault-k8s/k8s_config]</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:21:27.340+0100 [INFO]  Destroy Ingress: ref=k8s-dashboard</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:21:27.340+0100 [INFO]  Destroy Helm chart: ref=vault</span></span>\n<span><span style="color: var(--shiki-color-text)">2020-04-04T17:21:27.340+0100 [INFO]  Destroy Documentation: ref=docs</span></span>\n<span></span>'})})]})}var r=!0;function l(n,e){throw Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}e.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(a,n)})):a(n)}}},function(n){n.O(0,[774,888,179],function(){return n(n.s=5355)}),_N_E=n.O()}]);