(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1726],{4256:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/cli/connector",function(){return r(3)}])},3:function(e,n,r){"use strict";r.r(n),r.d(n,{__N_SSG:function(){return c}});var s=r(5893),a=r(1151);function t(e){let n=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code"},(0,a.ah)(),e.components),{Intro:r,Properties:t,Property:c}=n;return r||i("Intro",!0),t||i("Properties",!0),c||i("Property",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{children:"Connector"}),"\n",(0,s.jsx)(r,{children:(0,s.jsx)(n.p,{children:"Runs the connector used by Jumppad to expose remote and local applications"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{language:"shell",code:"jumppad connector <command>\n",children:(0,s.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">jumppad connector </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">command</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>\n<span></span>'})}),"\n",(0,s.jsx)(n.h2,{id:"generate_certs",children:"generate-certs"}),"\n",(0,s.jsx)(n.p,{children:"Generate TLS certificates for the server to the specified output location."}),"\n",(0,s.jsx)(n.pre,{language:"shell",code:"jumppad connector generate-certs [flags]\n",children:(0,s.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">jumppad connector generate-certs [flags]</span></span>\n<span></span>'})}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)(c,{name:"ca",type:"string",required:"false",value:"",children:(0,s.jsx)(n.p,{children:"Generate a CA x509 certificate and private key."})}),(0,s.jsx)(c,{name:"dns-name",type:"string",required:"false",value:"",children:(0,s.jsx)(n.p,{children:"DNS name to add to leaf certificate."})}),(0,s.jsx)(c,{name:"ip-address",type:"string",required:"false",value:"",children:(0,s.jsx)(n.p,{children:"IP address to add to the leaf certificate."})}),(0,s.jsx)(c,{name:"leaf",type:"string",required:"false",value:"",children:(0,s.jsx)(n.p,{children:"Generate a leaf c509 certificate and private key."})}),(0,s.jsx)(c,{name:"root-ca",type:"string",required:"false",value:"",children:(0,s.jsx)(n.p,{children:"CA cert to use for generating the leaf certificate."})}),(0,s.jsx)(c,{name:"root-key",type:"string",required:"false",value:"",children:(0,s.jsx)(n.p,{children:"Root key to use for generating the leaf certificate."})})]}),"\n",(0,s.jsx)(n.h2,{id:"run",children:"run"}),"\n",(0,s.jsx)(n.p,{children:"Run the connector."}),"\n",(0,s.jsx)(n.pre,{language:"shell",code:"jumppad connector run [flags]\n",children:(0,s.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">jumppad connector run [flags]</span></span>\n<span></span>'})}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)(c,{name:"api-bind",type:"string",required:"false",value:":9092",children:(0,s.jsx)(n.p,{children:"Bind address for the API Server."})}),(0,s.jsx)(c,{name:"grpc-bind",type:"string",required:"false",value:":9090",children:(0,s.jsx)(n.p,{children:"Bind address for the gRPC API."})}),(0,s.jsx)(c,{name:"http-bind",type:"string",required:"false",value:":9091",children:(0,s.jsx)(n.p,{children:"Bind address for the HTTP API."})}),(0,s.jsx)(c,{name:"log-file",type:"string",required:"false",value:"./connector.log",children:(0,s.jsx)(n.p,{children:"Log file for connector logs."})}),(0,s.jsx)(c,{name:"log-level",type:"string",required:"false",value:"info",children:(0,s.jsx)(n.p,{children:"Log output level [debug, trace, info]."})}),(0,s.jsx)(c,{name:"root-cert-path",type:"string",required:"false",value:"",children:(0,s.jsx)(n.p,{children:"Path for the PEM encoded TLS root certificate."})}),(0,s.jsx)(c,{name:"server-cert-path",type:"string",required:"false",value:"",children:(0,s.jsx)(n.p,{children:"Path for the servers PEM encoded TLS certificate."})}),(0,s.jsx)(c,{name:"server-key-path",type:"string",required:"false",value:"",children:(0,s.jsx)(n.p,{children:"Path for the servers PEM encoded Private Key."})})]}),"\n",(0,s.jsx)(n.h2,{id:"stop",children:"stop"}),"\n",(0,s.jsx)(n.p,{children:"Stop the connector."}),"\n",(0,s.jsx)(n.pre,{language:"shell",code:"jumppad connector stop\n",children:(0,s.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">jumppad connector stop</span></span>\n<span></span>'})})]})}var c=!0;function i(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}n.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(t,e)})):t(e)}}},function(e){e.O(0,[9774,2888,179],function(){return e(e.s=4256)}),_N_E=e.O()}]);